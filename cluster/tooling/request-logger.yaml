---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    pid /tmp/nginx.pid;
    events {
    }
    http {
      log_format request_data escape=json '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $bytes_sent '
                        '"$http_referrer" "$http_user_agent" "$request_body"';
      server {
        listen 80;
        location /logging {
          client_max_body_size 1M;
          client_body_buffer_size 1M;
          access_log /dev/stdout request_data;
          proxy_pass http://127.0.0.1:80/200-response;
        }

        location /200-response {
          return 200;
        }
      }

      client_body_temp_path /tmp/client_temp 1 2;
      proxy_temp_path /tmp/proxy_temp 1 2;
      fastcgi_temp_path /tmp/fastcgi_temp 1 2;
      uwsgi_temp_path /tmp/uwsgi_temp 1 2;
      scgi_temp_path /tmp/scgi_temp 1 2;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-logger
spec:
  selector:
    matchLabels:
      app: nginx-logger
  template:
    metadata:
      labels:
        app: nginx-logger
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1001
      containers:
        - name: nginx-logger
          image: nginxinc/nginx-unprivileged:1.27.2-alpine
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
              name: web
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /etc/nginx
              name: config-vol
            - name: tmp
              mountPath: /tmp
              readOnly: false
      volumes:
        - name: config-vol
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-logger
spec:
  type: ClusterIP
  selector:
    app: nginx-logger
  ports:
    - port: 80
      targetPort: web
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: nginx-logger
spec:
  hostnames:
    - logger.${SECRET_PUBLIC_DOMAIN_NAME}
  parentRefs:
    - name: external-gateway
      namespace: networking
    - name: internal-gateway
      namespace: networking
  rules:
    - backendRefs:
        - name: nginx-logger
          port: 80
      matches:
        - path:
            type: PathPrefix
            value: /logging
