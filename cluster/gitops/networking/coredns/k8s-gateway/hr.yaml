---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: coredns-k8s-gateway
spec:
  interval: 1h
  chart:
    spec:
      chart: coredns
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: coredns-charts
      version: 1.36.1
  # These values are added now that the cluster has been bootstrapped
  values:
    image:
      repository: ghcr.io/k8s-gateway/k8s_gateway
      tag: 1.3.0
    replicaCount: 2
    serviceType: LoadBalancer
    prometheus:
      service:
        enabled: true
      monitor:
        enabled: true
    service:
      loadBalancerIP: 10.34.0.10 # By convention, set the last octet to 10
      trafficDistribution: PreferClose
      name: k8s-gateway
    serviceAccount:
      create: true
    rbac:
      create: false
    isClusterService: false
    priorityClassName: system-cluster-critical
    # Containerd 2.0 enables binding to port numbers <= 1024 by default, so the
    # NET_BIND_SERVICE capability is not needed
    securityContext:
      capabilities:
        add: []
    servers:
      - zones:
          - zone: .
            scheme: dns://
            use_tcp: true
        port: 53
        plugins:
          - name: errors
          - name: health
            configBlock: lameduck 5s
          - name: ready
          - name: log
          - name: prometheus
            parameters: 0.0.0.0:9153 # Default is localhost only
          - name: reload
          - name: loop
          - name: loadbalance
          # Reject requests from public IP space
          # This shouldn't happen - this config is just a precaution
          - name: acl
            configBlock: |-
              allow net 10.0.0.0/8
              drop
          - name: k8s_gateway
            parameters: ${SECRET_PUBLIC_DOMAIN_NAME}
            configBlock: |-
              apex coredns-k8s-gateway.networking
              ttl 300
              resources Ingress Service HTTPRoute TLSRoute DNSEndpoint
              gatewayClasses internal-gateways
          # Resolve PTR records for load-balanced services
          # The currently-used image does not have k8s_external, so forward requests instead.
          # TODO raise an issue upstream once the k8s_gateway project moves to a new maintainer
          # - name: k8s_external
          #   parameters: 34.10.in-addr.arpa
          - name: forward
            parameters: 34.10.in-addr.arpa /etc/resolv.conf
          # Fix PTR record lookups
          - name: rewrite
            parameters: stop
            configBlock: |-
              name suffix .in-addr.arpa. .in-addr.arpa.
              answer name auto
              answer value (.*)\.cluster\.local\. {1}.${SECRET_PUBLIC_DOMAIN_NAME}
    livenessProbe:
      initialDelaySeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
    # Spread the pods out to mitigate the impact of a host failure
    topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: '{{ template "coredns.name" . }}'
            app.kubernetes.io/instance: "{{ .Release.Name }}"
        topologyKey: kubernetes.io/hostname
        maxSkew: 1
        whenUnsatisfiable: ScheduleAnyway
    podDisruptionBudget:
      minAvailable: 1
    k8sAppLabelOverride: k8s-gateway
