# This dumb PoS requires application-aware TLS to the UI port
# except for localhost connections (even if encryption in
# transit is handled elsewhere).
# The hidden "unifi.https.redirect=false" option allegedly
# allowed for this, but was broken in v8 or v9.
#
# This is an example of why TLS cargo-culting is bad. Just because
# the application isn't aware of TLS encryption, doesn't mean that
# it's not in use. Because the unifi devs think that they know
# more about my environment than I do, I have to choose to either
# give the controller my publicly-trusted cert, or use its
# self-signed cert. I don't trust the controller enough to give it
# my cert, so now I'm just going to use the self-signed cert and
# not know for certain what service I'm connecting to.
#
# Teleport makes the same mistake, with the same reasoning of "its
# better to encrypt connections multiple times than allow users to
# secure the service the way they want".
#
# ---
# apiVersion: gateway.networking.k8s.io/v1
# kind: HTTPRoute
# metadata:
#   name: unifi
#   labels:
#     app.kubernetes.io/name: unifi-controller
#     app.kubernetes.io/instance: unifi-controller
# spec:
#   hostnames:
#     - unifi.${SECRET_PUBLIC_DOMAIN_NAME}
#   parentRefs:
#     - name: internal-gateway
#       namespace: networking
#   rules:
#     - backendRefs:
#         - name: unifi-controller
#           port: 80
#       matches:
#         - path:
#             type: PathPrefix
#             value: /
