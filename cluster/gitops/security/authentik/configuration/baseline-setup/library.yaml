---
# yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
version: 1
metadata:
  name: Blueprint library
  labels:
    blueprints.goauthentik.io/description: Shared policies for blueprints
entries:
  - model: authentik_policies_expression.expressionpolicy
    id: is-sso-flow
    identifiers:
      name: is-sso-flow
    attrs:
      expression: return ak_is_sso_flow
  - model: authentik_stages_user_login.userloginstage
    id: user-login
    identifiers:
      name: user-login
    attrs:
      geoip_binding: bind_continent_country
      network_binding: bind_asn
      remember_me_offset: hours=120;minutes=0;seconds=0 # 5 days offset + session duration = 1 week
      session_duration: hours=48;minutes=0;seconds=0 # 2 days
  - model: authentik_stages_deny.denystage
    id: access-denied-stage
    identifiers:
      name: access-denied-stage
    attrs:
      deny_message: Access denied
  # This is a reduced version of the default proxy outpost mapping that only includes
  # the fields that are actually needed by most applications. This reduces the size of generated JWTs,
  # and therefore headers to proxy upstreams, by about 18kB.
  # Except for excluding the unnecessary keys, this is otherwise identical to the default mapping.
  - model: authentik_providers_oauth2.scopemapping
    id: proxy-outpost-reduced
    identifiers:
      name: >-
        authentik default OAuth Mapping: Proxy outpost reduced
    attrs:
      scope_name: proxy-outpost-reduced
      expression: |
        # This mapping is used by the authentik proxy. It passes extra user attributes,
        # which are used for example for the HTTP-Basic Authentication mapping.
        keys_to_exclude = [
          "avatar",
          "discord",
          "discord_initial",
          "discord_role_id"
        ]
        return {
            "ak_proxy": {
                "user_attributes": {
                  key: value
                  for key, value in request.user.group_attributes(request).items()
                  if key not in keys_to_exclude
                },
                "is_superuser": request.user.is_superuser,
            }
        }
