---
# yaml-language-server: $schema=../../../../../schemas/configs/blueprint.authentik_v1.json
version: 1
metadata:
  name: Password authentication flow
  labels:
    blueprints.goauthentik.io/description: Handle password authentication
entries:
  # Dependencies
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: Discord source
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: Blueprint library
      required: true
  - model: authentik_blueprints.metaapplyblueprint
    attrs:
      identifiers:
        name: Password change flow
      required: true
  # Flow logic
  - model: authentik_policies_expression.expressionpolicy
    id: password-authentication-flow-geoip-policy
    identifiers:
      name: password-authentication-flow-geoip-policy
    attrs:
      expression: |
        # TODO figure out how to filter on geoip country but skip when local IP
        # request.context.geoip
        return True
  - model: authentik_flows.flow
    id: flow
    identifiers:
      slug: password-authentication-flow
    attrs:
      designation: authentication
      name: Authenticate with username/password # TODO
      title: Log in
      compatibility_mode: true
      authentication: require_unauthenticated
  # Require CAPTCHA when source IP is below reputation threshold
  - model: authentik_policies_reputation.reputationpolicy
    id: password-authentication-flow-reputation-policy
    identifiers:
      name: password-authentication-flow-reputation-policy
    attrs:
      check_ip: true
      check_username: false
      threshold: -5
  - model: authentik_stages_captcha.captchastage
    id: password-authentication-flow-captcha-stage
    identifiers:
      name: password-authentication-flow-captcha-stage
    attrs:
      interactive: true
      js_url: https://challenges.cloudflare.com/turnstile/v0/api.js
      api_url: https://challenges.cloudflare.com/turnstile/v0/siteverify
      public_key: "${SECRET_AUTHENTIK_CLOUDFLARE_CAPTCHA_SITE_KEY}"
      private_key: "${SECRET_AUTHENTIK_CLOUDFLARE_CAPTCHA_SECRET_KEY}"
  - model: authentik_stages_identification.identificationstage
    id: password-authentication-flow-identification-stage
    identifiers:
      name: password-authentication-flow-identification-stage
    attrs:
      case_insensitive_matching: true
      pretend_user_exists: true
      show_matched_user: true
      show_source_labels: true
      sources:
        - !Find [authentik_sources_oauth.oauthsource, [name, Discord]]
      user_fields:
        - username
        - email
  - model: authentik_policies_expression.expressionpolicy
    id: check-if-sso-only
    identifiers:
      name: check-if-sso-only
    attrs:
      expression: |
        from authentik.core.models import User

        userObj = User.objects.get(email=request.user.email)
        return userObj.password == "" and userObj.sources.filter(slug="discord").exists()
  # If called, this stage will redirect the user to Discord for login, which will then send
  # the user back to the SSO login flow. For details, see
  # https://github.com/goauthentik/authentik/discussions/5470#discussioncomment-7143741
  - model: authentik_stages_identification.identificationstage
    id: password-authentication-flow-discord-redirect-stage
    identifiers:
      name: password-authentication-flow-discord-redirect-stage
    attrs:
      sources:
        - !Find [authentik_sources_oauth.oauthsource, [name, Discord]]
      user_fields: [] # Required for the redirect to work
  - model: authentik_stages_password.passwordstage
    id: password-authentication-flow-password-stage
    identifiers:
      name: password-authentication-flow-password-stage
    attrs:
      allow_show_password: true
      backends:
        - authentik.core.auth.InbuiltBackend # "Standard" password
        - authentik.core.auth.TokenBackend # App password
      configure_flow: !Find [authentik_flows.flow, [slug, password-change-flow]]
      failed_attempts_before_cancel: 5 # TODO account locking
  - model: authentik_stages_authenticator_validate.authenticatorvalidatestage
    id: password-authentication-flow-mfa-stage
    identifiers:
      name: password-authentication-flow-mfa-stage
    attrs:
      not_configured_action: skip
      device_classes:
        # Everything but SMS (not configured or supported)
        - static
        - totp
        - webauthn
        - duo
      last_auth_threshold: hours=168;minutes=0;seconds=0 # 1 week
      webauthn_user_verification: preferred
  # Binding
  - model: authentik_policies.policybinding
    identifiers:
      order: 0
      policy: !KeyOf password-authentication-flow-geoip-policy
      target: !KeyOf flow
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-captcha-stage-binding
    identifiers:
      order: 10
      stage: !KeyOf password-authentication-flow-captcha-stage
      target: !KeyOf flow
  - model: authentik_policies.policybinding
    identifiers:
      order: 0
      policy: !KeyOf password-authentication-flow-reputation-policy
      target: !KeyOf password-authentication-flow-captcha-stage-binding
    attrs:
      failure_result: true
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-identification-stage-binding
    identifiers:
      order: 20
      stage: !KeyOf password-authentication-flow-identification-stage
      target: !KeyOf flow
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-discord-redirect-stage-binding
    identifiers:
      order: 30
      stage: !KeyOf password-authentication-flow-discord-redirect-stage
      target: !KeyOf flow
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-password-stage-binding
    identifiers:
      order: 40
      stage: !KeyOf password-authentication-flow-password-stage
      target: !KeyOf flow
  - model: authentik_policies.policybinding
    identifiers:
      order: 0
      policy: !KeyOf check-if-sso-only
      target: !KeyOf password-authentication-flow-discord-redirect-stage-binding
    attrs:
      failure_result: true
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-mfa-stage-binding
    identifiers:
      order: 50
      stage: !KeyOf password-authentication-flow-mfa-stage
      target: !KeyOf flow
  - model: authentik_flows.flowstagebinding
    id: password-authentication-flow-user-login-binding
    identifiers:
      order: 60
      stage:
        !Find [authentik_stages_user_login.userloginstage, [name, user-login]]
      target: !KeyOf flow
