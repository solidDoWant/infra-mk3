---
# Route TLS connections to the Teleport proxy and let it handle TLS termination
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: teleport
  # labels:
  #   external-dns.home.arpa/publish: "true"
spec:
  hostnames:
    - teleport.${SECRET_PUBLIC_DOMAIN_NAME}
    - "*.teleport.${SECRET_PUBLIC_DOMAIN_NAME}"
    - teleport.cluster.local
    - "*.teleport.cluster.local"
  parentRefs:
    - name: internal-gateway
      namespace: networking
      sectionName: teleport-tls
    - name: internal-gateway
      namespace: networking
      sectionName: teleport-tls-wildcard
    - name: internal-gateway
      namespace: networking
      sectionName: teleport-cluster-tls
    - name: internal-gateway
      namespace: networking
      sectionName: teleport-cluster-wildcard-tls
    # - name: external-gateway
    #   namespace: networking
  rules:
    - backendRefs:
        - name: teleport-cluster
          port: 443
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: enable-teleport-backend-tls
spec:
  targetRefs:
    - group: ""
      kind: Service
      name: teleport-cluster
      sectionName: tls
  validation:
    wellKnownCACertificates: System
    hostname: teleport.${SECRET_PUBLIC_DOMAIN_NAME}
---
# This is needed as browsers may reuse TLS connections to the ingress gateway,
# so the ingress gateway sees the wrong host.
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: teleport
spec:
  hostnames:
    - teleport.${SECRET_PUBLIC_DOMAIN_NAME}
    - "*.teleport.${SECRET_PUBLIC_DOMAIN_NAME}"
  parentRefs:
    - name: internal-gateway
      namespace: networking
  rules:
    - backendRefs:
        - name: teleport-cluster
          port: 443
      matches:
        - path:
            type: PathPrefix
            value: /
