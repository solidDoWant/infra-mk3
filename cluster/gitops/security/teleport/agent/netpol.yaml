---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: teleport-agent
specs:
  - description: teleport-agent
    endpointSelector:
      matchLabels:
        app: teleport-agent
    egress:
      # DNS resolution
      - toEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: networking
              endpoints.netpols.home.arpa/cluster-dns: "true"
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP
      # Access to all CNPG instances
      - toEndpoints:
          - matchExpressions:
              - key: io.kubernetes.pod.namespace
                operator: Exists
              - key: cnpg.io/podRole
                operator: In
                values:
                  - instance
        toPorts:
          - ports:
              - port: "5432"
                protocol: TCP
      # Access to all Dragonfly instances
      - toEndpoints:
          - matchExpressions:
              - key: io.kubernetes.pod.namespace
                operator: Exists
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - dragonfly
              - key: app.kubernetes.io/part-of
                operator: In
                values:
                  - dragonfly
        toPorts:
          - ports:
              - port: "6379"
                protocol: TCP
      # Access to the proxy server
      - toEndpoints:
          - matchLabels:
              app.kubernetes.io/name: teleport-cluster
              app.kubernetes.io/instance: teleport-cluster
              app.kubernetes.io/component: proxy
        toPorts:
          - ports:
              # TLS port to access the webapi find endpoint
              - port: "3080"
                protocol: TCP
              # SSH reverse tunnel port
              - port: "3024"
                protocol: TCP
      # Access to get the agent state secret
      - toEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "6443"
                protocol: TCP
    ingress:
      # Kubelet for healthcheck
      - fromEntities:
          - host
        toPorts:
          - ports:
              - port: diag
                protocol: TCP
      # Metrics
      - fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: monitoring
              endpoints.netpols.home.arpa/metrics-scraper: "true"
        toPorts:
          - ports:
              - port: diag
                protocol: TCP
