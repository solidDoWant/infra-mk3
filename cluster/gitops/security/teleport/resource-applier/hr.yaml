---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# Watch for configmaps with Teleport resources in them and apply them. Doesn't
# work perfectly, but is good enough.
# TODO remove this when/if DB and bot support is added to the operator
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: teleport-resource-applier
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
      version: 3.5.1
  values:
    controllers:
      teleport-resource-applier:
        containers:
          # 1. Watch for configmaps
          k8s-sidecar:
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.28.0
            env:
              LABEL: k8s-sidecar.home.arpa/application
              LABEL_VALUE: teleport
              FOLDER: /resources
              NAMESPACE: ALL
              RESOURCE: both
              METHOD: SLEEP
              UNIQUE_FILENAMES: "true"
              DEFAULT_FILE_MODE: "660" # Write permissions are required so that the files can be updated
          # 2. Authenticate with Teleport
          auth:
            image:
              repository: ubuntu
              tag: 22.04
            command:
              - /script/auth.sh
            env:
              RESOURCES_DIRECTORY: /resources
              TELEPORT_PROXY_ADDRESS: teleport.${SECRET_PUBLIC_DOMAIN_NAME}:443
              NAMESPACE: "{{ .Release.Namespace }}"
              AUTH_SERVER_DEPLOYMENT_NAME: teleport-cluster-auth
              BOT_NAME: teleport-resource-applier
              ROLE_NAME: teleport-resource-applier
              TOKEN_NAME: teleport-resource-applier
              TELEPORT_IDENTITY_FILE: /opt/machine-id/identity
          # 3. Apply the configmaps
          resource-applier:
            image:
              repository: ubuntu
              tag: 22.04
            command:
              - /script/applier.sh
            env:
              RESOURCES_DIRECTORY: /resources
              TELEPORT_PROXY_ADDRESS: teleport.${SECRET_PUBLIC_DOMAIN_NAME}:443
              NAMESPACE: "{{ .Release.Namespace }}"
              AUTH_SERVER_DEPLOYMENT_NAME: teleport-cluster-auth
              BOT_NAME: teleport-resource-applier
              ROLE_NAME: teleport-resource-applier
              TOKEN_NAME: teleport-resource-applier
    defaultPodOptions:
      # This needs root for `apt`, so isolate it from the host. Performance is
      # not a concern.
      runtimeClassName: kata
    persistence:
      rootfs:
        type: emptyDir
        globalMounts:
          - path: /resources
      script:
        type: configMap
        name: applier-script
        defaultMode: 0555
        advancedMounts:
          teleport-resource-applier:
            auth:
              - path: /script
            resource-applier:
              - path: /script
      machine-id:
        type: emptyDir
        advancedMounts:
          teleport-resource-applier:
            auth:
              - path: /opt/machine-id
            resource-applier:
              - path: /opt/machine-id
    serviceAccount:
      create: true
    rbac:
      roles:
        teleport-resource-applier-k8s-sidecar:
          type: ClusterRole
          rules:
            # RBAC for k8s-sidecar
            - apiGroups:
                - ""
              resources:
                - configmaps
                - secrets
              verbs:
                - get
                - list
                - watch
        teleport-resource-applier-resource-applier:
          type: Role
          rules:
            # RBAC for Teleport to access auth for first time setup
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - ""
              resources:
                - pods/exec
              verbs:
                - create
      bindings:
        teleport-resource-applier-k8s-sidecar:
          type: ClusterRoleBinding
          roleRef:
            identifier: teleport-resource-applier-k8s-sidecar
          subjects:
            - identifier: default
              namespace: "{{ .Release.Namespace }}"
        teleport-resource-applier-resource-applier:
          type: RoleBinding
          roleRef:
            identifier: teleport-resource-applier-resource-applier
          subjects:
            - identifier: default
              namespace: "{{ .Release.Namespace }}"
