---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s-charts
      version: 3.7.3
  values:
    controllers:
      vaultwarden:
        replicas: 2
        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.33.2-alpine
            env:
              # General config
              DOMAIN: https://vaultwarden.${SECRET_PUBLIC_DOMAIN_NAME}
              SIGNUPS_ALLOWED: "false"
              IP_HEADER: X-Forwarded-For
              # Database config
              DATABASE_URL: "\
                postgresql://vaultwarden@vaultwarden-postgres-17-rw.security.svc:5432/vaultwarden?\
                sslrootcert=/certs/postgres/serving/ca.crt&\
                sslcert=/certs/postgres/user/tls.crt&\
                sslkey=/certs/postgres/user/tls.key&\
                sslmode=verify-full"
              # SMTP config
              SMTP_HOST: docker-postfix-mail.email.svc.cluster.local
              SMTP_FROM_NAME: Vaultwarden
              SMTP_FROM: no-reply-vaultwarden@${SECRET_PUBLIC_DOMAIN_NAME}
              SMTP_PORT: "25"
              SMTP_SECURITY: "off"
            envFrom:
              - secretRef:
                  name: vaultwarden-env-values
            ports:
              - containerPort: 80
                name: http
            probes:
              liveness: &probe
                enabled: true
                path: /health
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        pod:
          labels:
            endpoints.netpols.home.arpa/email-sender: "true"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          topologySpreadConstraints:
            - maxSkew: 1 # Skew of 1 allows for rolling updates
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vaultwarden
              whenUnsatisfiable: DoNotSchedule
    service:
      app:
        controller: vaultwarden
        ports:
          http:
            port: 80
        sessionAffinity: ClientIP
        sessionAffinityConfig:
          clientIP:
            timeoutSeconds: 10800 # 3 hours
    persistence:
      data:
        type: persistentVolumeClaim
        # This is needed for HA
        accessMode: ReadWriteMany
        size: 5Gi
        storageClass: ssd-replicated-filesystem # Needed for RWX
        advancedMounts:
          vaultwarden:
            app:
              - path: /data
      postgres-serving-cert:
        type: secret
        name: vaultwarden-postgres-17-serving-cert
        defaultMode: 0444
        items:
          - key: ca.crt
            path: ca.crt
        advancedMounts:
          vaultwarden:
            app:
              - path: /certs/postgres/serving
      postgres-user-cert:
        type: secret
        name: vaultwarden-postgres-vaultwarden-user
        defaultMode: 0440
        items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
        advancedMounts:
          vaultwarden:
            app:
              - path: /certs/postgres/user
