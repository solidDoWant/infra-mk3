---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/cert-manager.io/clusterissuer_v1.json
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: self-signed
spec:
  selfSigned:
    {}
    # TODO implement CRL service + CLI tool that allows for revoking certs based upon cert-manager name
    # crlDistributionPoints:
    #   -
---
# yaml-language-server: $schema=../../../../../schemas/crds/certificaterequestpolicy_v1alpha1.json
# Approve all requested self-signed certs. They won't be trusted by default and can
# be generated by anybody with or without access to the issuer.
apiVersion: policy.cert-manager.io/v1alpha1
kind: CertificateRequestPolicy
metadata:
  name: self-signed-issuer
spec:
  selector:
    issuerRef:
      group: cert-manager.io
      kind: ClusterIssuer
      name: self-signed
  allowed:
    isCA: true
    commonName: &all_value
      value: "*"
    dnsNames: &all_values
      values:
        - "*"
    emailAddresses: *all_values
    ipAddresses: *all_values
    subject:
      countries: *all_values
      localities: *all_values
      organizationalUnits: *all_values
      organizations: *all_values
      postalCodes: *all_values
      provinces: *all_values
      serialNumber: *all_value
      streetAddresses: *all_values
    uris: *all_values
    usages:
      - signing
      - digital signature
      - content commitment
      - key encipherment
      - key agreement
      - data encipherment
      - cert sign
      - crl sign
      - encipher only
      - decipher only
      - any
      - server auth
      - client auth
      - code signing
      - email protection
      - s/mime
      - ipsec end system
      - ipsec tunnel
      - ipsec user
      - timestamping
      - ocsp signing
      - microsoft sgc
      - netscape sgc
