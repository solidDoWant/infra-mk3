---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
# Proxy requests for fileflows.com, to block telemetry and other requests that are not needed for the webservice to function.
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: fileflows-proxy
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        namespace: flux-system
        name: bjw-s-charts
      version: 3.7.3
  values:
    controllers:
      fileflows-proxy:
        replicas: 2
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: nginxinc/nginx-unprivileged
              tag: 1.27.2-alpine
            resources:
              requests:
                memory: 128Mi
                cpu: 10m
              limits:
                memory: 128Mi
                cpu: 100m
            ports:
              - containerPort: 80
                name: http
            probes:
              liveness: &probe
                enabled: true
                type: AUTO
                port: http
                path: /_healthz
              readiness: *probe
            securityContext: &security_context
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          metrics:
            image:
              repository: ghcr.io/nginx/nginx-prometheus-exporter
              tag: 1.4.1
            args:
              - --nginx.scrape-uri=http://localhost:8080/stub_status
            resources:
              requests:
                memory: 64Mi
                cpu: 10m
              limits:
                memory: 64Mi
                cpu: 100m
            ports:
              - containerPort: 9113
                name: metrics
            probes:
              liveness: &probe
                enabled: true
                port: metrics
                type: HTTP
                path: /metrics
              readiness: *probe
            securityContext: *security_context
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
    service:
      app:
        controller: fileflows-proxy
        ports:
          http:
            port: 80
            protocol: HTTP
          metrics:
            port: 9113
            protocol: HTTP
    serviceMonitor:
      fileflows-proxy:
        enabled: true
        serviceName: "{{ .Release.Name }}"
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      nginx-config:
        type: secret
        name: fileflows-proxy-nginx-config
        advancedMounts:
          fileflows-proxy:
            app:
              - path: /etc/nginx
      tmp:
        type: emptyDir
        advancedMounts:
          fileflows-proxy:
            app:
              - path: /tmp
