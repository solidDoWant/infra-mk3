---
apiVersion: v1
kind: Secret
metadata:
  name: authentik-harbor-application-blueprint
  labels:
    k8s-sidecar.home.arpa/application: authentik
type: Opaque
stringData:
  # Unfortunately this must be a secret (rather than secretGenerator) or Flux will not substitute
  # values within it
  authentik-harbor-application-blueprint.yaml: |
    ---
    # yaml-language-server: $schema=https://goauthentik.io/blueprints/schema.json
    version: 1
    metadata:
      name: Harbor application
      labels:
        blueprints.goauthentik.io/description: Resources for Harbor SSO
    entries:
      # Dependencies
      - model: authentik_blueprints.metaapplyblueprint
        attrs:
          identifiers:
            name: Implicit provider authentication
          required: true
      - model: authentik_blueprints.metaapplyblueprint
        attrs:
          identifiers:
            name: Password authentication flow
          required: true
      - model: authentik_blueprints.metaapplyblueprint
        attrs:
          identifiers:
            name: Invalidation flow
          required: true
      - model: authentik_blueprints.metaapplyblueprint
        attrs:
          identifiers:
            name: Blueprint library
          required: true
      # Application
      - model: authentik_providers_oauth2.oauth2provider
        id: harbor-provider
        identifiers:
          name: Harbor
        attrs:
          name: Harbor
          authorization_flow:
            !Find [authentik_flows.flow, [slug, implicit-authorization-flow]]
          client_type: confidential
          client_id: "${SECRET_HARBOR_AUTHENTIK_OIDC_CLIENT_ID}"
          client_secret: "${SECRET_HARBOR_AUTHENTIK_OIDC_CLIENT_SECRET}"
          # Authentik docs are wrong. The redirect URI should not have trailing slash
          redirect_uris:
            - url: https://harbor.${SECRET_PUBLIC_DOMAIN_NAME}/c/oidc/callback
              matching_mode: strict
          signing_key:
            !Find [
              authentik_crypto.certificatekeypair,
              [name, authentik Self-signed Certificate],
            ]
          authentication_flow:
            !Find [authentik_flows.flow, [slug, password-authentication-flow]]
          invalidation_flow: !Find [authentik_flows.flow, [slug, invalidation-flow]]
          access_code_validity: minutes=1
          access_token_validity: minutes=5
          refresh_token_validity: days=30
          property_mappings:
            - !Find [
                authentik_providers_oauth2.scopemapping,
                [name, "authentik default OAuth Mapping: OpenID 'email'"],
              ]
            - !Find [
                authentik_providers_oauth2.scopemapping,
                [name, "authentik default OAuth Mapping: OpenID 'openid'"],
              ]
            - !Find [
                authentik_providers_oauth2.scopemapping,
                [name, "authentik default OAuth Mapping: OpenID 'profile'"],
              ]
            - !Find [
                authentik_providers_oauth2.scopemapping,
                [name, "authentik default OAuth Mapping: OpenID 'offline_access'"],
              ]
          sub_mode: hashed_user_id
          include_claims_in_id_token: true
          issuer_mode: per_provider
      - model: authentik_core.application
        id: harbor-application
        identifiers:
          slug: harbor
        attrs:
          name: Harbor
          slug: harbor
          group: Development access
          provider: !KeyOf harbor-provider
          policy_engine_mode: any
          meta_launch_url: https://harbor.${SECRET_PUBLIC_DOMAIN_NAME}
          # icon: # TODO
      # Groups
      - model: authentik_core.group
        id: harbor-admins-group
        identifiers:
          name: Harbor admins
        attrs:
          attributes:
            discord_role_id: "${SECRET_AUTHENTIK_HARBOR_ADMINS_DISCORD_ROLE_ID}"
      - model: authentik_policies.policybinding
        identifiers:
          order: 0
          group: !KeyOf harbor-admins-group
          target: !KeyOf harbor-application
      # Groups
      - model: authentik_core.group
        id: harbor-users-group
        identifiers:
          name: Harbor users
        attrs:
          attributes:
            discord_role_id: "${SECRET_AUTHENTIK_HARBOR_USERS_DISCORD_ROLE_ID}"
      - model: authentik_policies.policybinding
        identifiers:
          order: 0
          group: !KeyOf harbor-users-group
          target: !KeyOf harbor-application
