---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: minecraft-router
specs:
  - description: minecraft-router
    endpointSelector:
      matchLabels:
        app.kubernetes.io/name: minecraft-router
        app.kubernetes.io/instance: minecraft-router
        app.kubernetes.io/component: minecraft-router
    egress:
      # DNS resolution
      - toEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: networking
              endpoints.netpols.home.arpa/cluster-dns: "true"
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP
            rules:
              dns:
                - matchPattern: "*.games.svc.cluster.local"
                - matchName: discord.com
      # Access to the k8s API to look for endpoints
      - toEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "6443"
                protocol: TCP
      # Send traffic to minecraft servers
      - toEndpoints:
          - matchLabels:
              endpoints.netpols.home.arpa/minecraft-server: "true"
        toPorts:
          - ports:
              - port: "25565"
                protocol: TCP
      # Call Discord webhook
      - toFQDNs:
          - matchName: discord.com
        toPorts:
          - ports:
              - port: "443"
                protocol: TCP
    ingress:
      # Kubelet for healthcheck
      - fromEntities:
          - host
        toPorts: &webservice_ports
          - ports:
              - port: "80"
                protocol: TCP
              - port: "8080"
                protocol: TCP
      # Gateway to webservice
      - fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: networking
              app.kubernetes.io/name: ingress-gateways
              gateway.networking.k8s.io/gateway-name: internal-gateway
        toPorts: *webservice_ports
      # Gateway to game server port
      - fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: networking
              app.kubernetes.io/name: ingress-gateways
        toPorts:
          - ports:
              - port: "25565"
                protocol: TCP
      # Metrics
      - fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: monitoring
              endpoints.netpols.home.arpa/metrics-scraper: "true"
        toPorts:
          - ports:
              - port: "8080"
                protocol: TCP
