---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: kubevirt
specs:
  - description: virt-operator-strategy-dumper
    endpointSelector:
      matchLabels:
        kubevirt.io: virt-operator-strategy-dumper
    egress:
      # To API server
      - &to_apiserver
        toEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "6443"
  - description: virt-api
    endpointSelector: &virt_api_selector
      matchLabels:
        kubevirt.io: virt-api
    egress:
      - *to_apiserver
      # To virt-handler for console port
      - toEndpoints:
          - &virt_handler_selector
            matchLabels:
              kubevirt.io: virt-handler
        toPorts:
          - ports:
              - port: "8186"
                protocol: TCP
    ingress:
      # Kubelet for healthcheck
      - &from_kubelet
        fromEntities:
          - host
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
      # From API server for webhooks
      - fromEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
      # Metrics
      - &from_metrics_scraper
        fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: monitoring
              endpoints.netpols.home.arpa/metrics-scraper: "true"
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
  - description: virt-controller
    endpointSelector:
      matchLabels:
        kubevirt.io: virt-controller
    egress:
      - *to_apiserver
    ingress:
      - *from_kubelet
      - *from_metrics_scraper
  - description: virt-handler
    endpointSelector: *virt_handler_selector
    egress:
      - *to_apiserver
      # To other instances for live migration
      - toEndpoints:
          - *virt_handler_selector
    ingress:
      - *from_kubelet
      - *from_metrics_scraper
      # From virt-api for console port
      - fromEndpoints:
          - *virt_api_selector
        toPorts:
          - ports:
              - port: "8186"
                protocol: TCP
      # From other instances for live migration
      - fromEndpoints:
          - *virt_handler_selector
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/cilium.io/ciliumnetworkpolicy_v2.json
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: cdi
specs:
  - description: cdi-apiserver
    endpointSelector:
      matchLabels:
        cdi.kubevirt.io: cdi-apiserver
    egress:
      # To API server
      - &to_apiserver
        toEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "6443"
    ingress:
      # Kubelet for healthcheck
      - &from_kubelet
        fromEntities:
          - host
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
      # From API server for webhooks
      - fromEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
  - description: cdi-deployment
    endpointSelector:
      matchLabels:
        cdi.kubevirt.io: cdi-deployment
    egress:
      - *to_apiserver
      # To namespace-specific importers
      - toEndpoints:
          - matchLabels:
              cdi.kubevirt.io: importer
            matchExpressions:
              - key: io.kubernetes.pod.namespace
                operator: Exists
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
    ingress:
      # Metrics
      - fromEndpoints:
          - matchLabels:
              io.kubernetes.pod.namespace: monitoring
              endpoints.netpols.home.arpa/metrics-scraper: "true"
        toPorts:
          - ports:
              - port: "8443"
                protocol: TCP
  - description: cdi-uploadproxy
    endpointSelector:
      matchLabels:
        cdi.kubevirt.io: cdi-uploadproxy
    egress:
      - *to_apiserver
    ingress:
      - *from_kubelet
