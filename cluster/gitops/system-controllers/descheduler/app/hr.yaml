---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app_name descheduler
spec:
  interval: 5m
  chart:
    spec:
      chart: descheduler
      sourceRef:
        kind: HelmRepository
        name: descheduler-charts
      version: 0.31.0
  values:
    kind: Deployment
    replicas: 2
    leaderElection:
      enabled: true
    deschedulerPolicy:
      # TODO tracing
      # tracing:
      # For some dumb reason this doesn't use a CRD, but a config file
      # templated as multiple instances of CRD-conformant YAML files
      profiles:
        # Default configuration that should apply to everything
        - name: default
          plugins:
            deschedule:
              enabled:
                - RemoveFailedPods
                - RemovePodsViolatingNodeTaints
                - RemovePodsHavingTooManyRestarts
                - PodLifeTime
          pluginConfig:
            - name: DefaultEvictor
              args:
                evictLocalStoragePods: true
                evictSystemCriticalPods: true
                evictFailedBarePods: true
            - name: RemoveFailedPods
              args:
                # TODO
                # reasons:
                #   - TODO
                # exitCodes:
                #   - 1234
                includingInitContainers: true
                minPodLifetimeSeconds: 86400 # One day
            - name: RemovePodsViolatingNodeTaints
              args:
                includePreferNoSchedule: true
            - name: RemovePodsHavingTooManyRestarts
              args:
                podRestartThreshold: 10
                includingInitContainers: true
            - name: PodLifeTime
              args:
                includingInitContainers: true
                includingEphemeralContainers: true
                maxPodLifeTimeSeconds: 604800 # One week
                labelSelector:
                  matchExpressions:
                    - key: descheduler.home.arpa/enable-lifetime-eviction
                      operator: NotIn
                      values:
                        - "false"
        # Policy for services with multiple instances
        - name: replicated-pods
          plugins:
            deschedule:
              enabled:
                - RemovePodsViolatingInterPodAntiAffinity
                - RemovePodsViolatingNodeAffinity
                - RemovePodsViolatingNodeTaints
            balance:
              enabled:
                - RemoveDuplicates
                - LowNodeUtilization
                - RemovePodsViolatingTopologySpreadConstraint
          pluginConfig:
            - name: DefaultEvictor
              args:
                evictLocalStoragePods: true
                evictSystemCriticalPods: true
                evictFailedBarePods: true
                # Docs imply that this doesn't take into account
                # topologyspreadconstraints.
                nodeFit: true
                minReplicas: 1
                # TODO enable this upon 1.32 release
                # ignorePodsWithoutPDB: true
            - name: RemoveDuplicates
            # Spread out workloads. There's no autoscaling, so all resources
            # might as well be used
            - name: LowNodeUtilization
              args:
                thresholds:
                  cpu: 20
                  memory: 0
                  pods: 0
                targetThresholds:
                  cpu: 50
                  memory: 100
                  pods: 100
            # Get pods placed optimally
            - name: RemovePodsViolatingInterPodAntiAffinity
            - name: RemovePodsViolatingNodeAffinity
            - name: RemovePodsViolatingNodeTaints
            - name: RemovePodsViolatingTopologySpreadConstraint
              args:
                topologyBalanceNodeFit: true
    service:
      enabled: true
    # TODO monitoring
    # serviceMonitor:
    #   enabled: true
    topologySpreadConstraints:
      - maxSkew: 1 # Skew of 1 allows for rolling updates
        topologyKey: kubernetes.io/hostname
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: *app_name
        whenUnsatisfiable: DoNotSchedule
