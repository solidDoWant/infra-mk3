---
# yaml-language-server: $schema=../../../../../schemas/crds/plan_v1.json
apiVersion: upgrade.cattle.io/v1
kind: Plan
metadata:
  name: talos-upgrade
spec:
  concurrency: 1
  # Match Talos nodes with an out of date version only
  nodeSelector:
    matchLabels:
      feature.node.kubernetes.io/system-os_release.ID: talos
      kubernetes.io/hostname: talos-k8s-mixed-01
    matchExpressions:
      - key: feature.node.kubernetes.io/system-os_release.VERSION_ID
        operator: NotIn
        values:
          - ${TALOS_VERSION}
  # The pod will already have enough access to the node and talos to compromise
  # the whole cluster. Reusing the account should have a minimal risk and means
  # that I don't have to debug more RBAC issues.
  serviceAccountName: system-upgrade-controller
  version: ${TALOS_VERSION}
  secrets:
    - name: talos-credentials
      path: /var/run/secrets/talos.dev
    # If the Plan CRD ever adds support for configmaps, this should be
    # converted
    - name: upgrade-scripts
      path: /scripts
  exclusive: true
  # TODO enable this after next controller/crd release
  # window:
  prepare: &prepare
    image: alpine/k8s:1.31.2
    envs:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName
      - name: NODE_IP
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
      - name: TALOS_VERSION
        value: ${TALOS_VERSION}
    # Needed until https://github.com/rancher/system-upgrade-controller/pull/337 is merged
    command:
      - bash
    args:
      - -c
      - >-
        cp -rv /scripts /tmp/scripts &&
        chmod -R 500 /tmp/scripts &&
        /tmp/scripts/talos.sh prepare
  drain: {}
  upgrade:
    <<: *prepare
    args:
      - -c
      - >-
        cp -rv /scripts /tmp/scripts &&
        chmod -R 500 /tmp/scripts &&
        /tmp/scripts/talos.sh upgrade
