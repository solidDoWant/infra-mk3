---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2.json
# TODO tunnel via istio so that data is encrypted in transit
# TODO netpols
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app_name democratic-csi-zfs-generic-nfs
spec:
  interval: 5m
  chart:
    spec:
      chart: democratic-csi
      sourceRef:
        kind: HelmRepository
        name: democratic-csi-charts
      version: 0.14.7
  # Not using Teleport for this until https://github.com/democratic-csi/democratic-csi/issues/454
  # is addressed
  valuesFrom:
    - kind: Secret
      name: zfs-generic-nfs-authentication
      valuesKey: SSH_PRIVATE_KEY
      targetPath: driver.config.sshConnection.privateKey
  values:
    driver:
      config:
        driver: zfs-generic-nfs
        sshConnection:
          # Options documented here: https://www.npmjs.com/package/ssh2#client-methods
          host: &host 10.2.3.1 # ubuntu-storage-host-01
          port: 22
          username: democratic-csi
        zfs:
          cli:
            sudoEnabled: true
          datasetProperties:
            # TODO user properties
          # Needs https://github.com/democratic-csi/democratic-csi/pull/455
          snapshotProperties:
            # TODO user properties
          datasetParentName: bulk-pool-01/k8s/democratic-csi/nfs/pvcs
          detachedSnapshotsDatasetParentName: bulk-pool-01/k8s/democratic-csi/nfs/detached-snapshots
          datasetEnableQuotas: true
          datasetEnableReservation: true
          datasetPermissionsMode: "0770"
          datasetPermissionsUser: democratic-csi
          datasetPermissionsGroup: democratic-csi
        nfs:
          shareStrategy: setDatasetProperties
          shareStrategySetDatasetProperties:
            properties:
              # TODO enable TLS for kernel socks via tlshd (xprtsec=mtls)
              # This will require expanding PKI out of cluster
              # Limit mounts of this dataset to the k8s cluster host network only
              sharenfs: sec=sys,rw=@10.3.0.0/16,crossmnt,no_subtree_check,no_root_squash
          shareHost: *host
    csiDriver:
      name: nfs.zfs.democratic-csi.local
    controller:
      replicaCount: 2
      priorityClassName: system-cluster-critical
      externalHealthMonitorController:
        extraArgs:
          - --enable-node-watcher=true
      driver:
        image: &dcsi_image docker.io/democraticcsi/democratic-csi:v1.9.3
      topologySpreadConstraints:
        - maxSkew: 1 # Skew of 1 allows for rolling updates
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: controller-linux
              app.kubernetes.io/instance: *app_name
          whenUnsatisfiable: DoNotSchedule
    node:
      priorityClassName: system-cluster-critical
      driver:
        image: *dcsi_image
    storageClasses:
      - name: zfs-generic-nfs
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          fsType: nfs
        mountOptions:
          - timeo=100 # Start request timeout at 10s instead of the default of 60
          - rsize=1048576 # 1MB read size (max)
          - wsize=1048576 # 1MB write size (max)
          - nfsvers=4.2
            # If client ports are randomly chosen, then this should roughly balance the traffic between both legs in the LAG
          - nconnect=8
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
          node-publish-secret:
          controller-expand-secret:
    volumeSnapshotClasses:
      - name: zfs-generic-nfs-snapshot
        annotations:
          snapshot.storage.kubernetes.io/is-default-class: "true"
        deletionPolicy: Delete
        parameters:
          detachedSnapshots: "false"
