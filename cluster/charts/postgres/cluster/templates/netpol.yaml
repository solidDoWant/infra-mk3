---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: {{ include "cluster-resource-name" . }}
specs:
  - description: instances
    endpointSelector:
      matchLabels:
        cnpg.io/cluster: {{ include "cluster-resource-name" . }}
        cnpg.io/podRole: instance
    egress:
      # Replication between primary and replicas
      - toEndpoints:
          - matchLabels:
              cnpg.io/cluster: {{ include "cluster-resource-name" . }}
              cnpg.io/podRole: instance
        toPorts:
          - ports:
              - port: postgresql
                protocol: TCP
      # DNS resolution
      - toEndpoints:
          - {{ .Values.netpol.dns.selector | toYaml | nindent 12 | trim }}
        toPorts:
          - ports:
              - port: "53"
                protocol: UDP
              - port: "53"
                protocol: TCP
      {{- if .Values.bucket.endpoint }}
      # Access to S3 for WAL archiving
      - toEndpoints:
          - {{ .Values.netpol.bucket.selector | toYaml | nindent 12 | trim }}
        toPorts:
          - ports:
              - port: {{ include "bucket.port" . }}
                protocol: TCP
      {{- end }}
      # Access k8s resources (e.g. serving and client CA certificate secrets)
      - toEntities:
          - kube-apiserver
        toPorts:
          - ports:
              - port: "6443"
                protocol: TCP
    ingress:
      # Status check
      - fromEntities:
          # kubelet for healthcheck
          - host
        toPorts: &status_ports
          - ports:
              - port: status
                protocol: TCP
      - fromEndpoints:
          # Operator access for maintenance
          - {{ .Values.netpol.operator.selector | toYaml | nindent 12 | trim }}
        toPorts: *status_ports
      # Postgres client access
      - fromEndpoints:
          # Replication between primary and replicas
          - matchLabels:
              cnpg.io/cluster: {{ include "cluster-resource-name" . }}
              cnpg.io/podRole: instance
          # Configuration and maintenance from the operator
          - {{ .Values.netpol.operator.selector | toYaml | nindent 12 | trim }}
          # Access from Teleport
          - {{ .Values.netpol.teleportAccess.selector | toYaml | nindent 12 | trim }}
          {{- if .Values.netpol.applicationAccess.selector }}
          # Access from the application
          - {{ .Values.netpol.applicationAccess.selector | toYaml | nindent 12 | trim }}
          {{- end }}
        toPorts:
          - ports:
              - port: postgresql
                protocol: TCP
      # Metrics
      - fromEndpoints:
          - {{ .Values.netpol.metricsScraper.selector | toYaml | nindent 12 | trim }}
        toPorts:
          - ports:
              - port: metrics
                protocol: TCP