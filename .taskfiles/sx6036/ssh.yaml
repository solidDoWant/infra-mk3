---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

env:
  SSHPASS: admin

tasks:
  run-command:
    silent: true
    vars:
      # 'quote' is used instead of 'shellQuote' because the command _must_ use double quotes instead of single
      COALESCED_COMMANDS:
        ref: >-
          coalesce
            .COMMANDS
            (coalesce .COMMAND " " | trim | splitList "\n" | compact)
            (splitArgs .CLI_ARGS)
      FORMATTED_COMMANDS: >-
        {{- range $i, $command := .COALESCED_COMMANDS -}}
          {{/* Clean up the command */}}
          {{- $cleanedCommand := trim $command -}}
          {{/* Only print the command if not empty */}}
          {{- if (ne $cleanedCommand "") -}}
            {{/* Print a space between commands */}}
            {{- if (ne $i 0) }} {{end}}{{ $cleanedCommand | quote }}
          {{- end }}
        {{- end }}
    cmd: sshpass -e ssh {{ .SX6036_MGMT_IP }} cli -h {{ shellQuote .FORMATTED_COMMANDS }}

  # This requires tricking SSH into thinking that it is in "interactive" mode, as the `_shell` command
  # is not available in non-interactive mode
  run-command-shell:
    silent: true
    vars:
      SHELL_COMMANDS:
        - enable
        - configure terminal
        - _shell
        - set -e
      # 'quote' is used instead of 'shellQuote' because the command _must_ use double quotes instead of single
      CONVERTED_COMMAND_LIST:
        ref: (compact (list (trim (coalesce .COMMAND " "))))
      COALESCED_PROVIDED_COMMAND:
        ref: coalesce .COMMANDS .CONVERTED_COMMAND_LIST (splitArgs .CLI_ARGS)
      COMBINED_COMMANDS:
        ref: concat .SHELL_COMMANDS .COALESCED_PROVIDED_COMMAND
      QUOTED_COMMANDS: "{{ range $i, $command := .COMBINED_COMMANDS }}{{ if (ne $i 0) }} {{end}}{{ shellQuote $command }}{{ end }}"
    cmd: printf '%s\n' {{ .QUOTED_COMMANDS }} | sshpass -e ssh -T {{ .SX6036_MGMT_IP }}

  wait-online:
    silent: true
    internal: true
    cmd: |
      echo "Waiting for switch to come back online..."
      sleep 60  # Give the switch time to close port 22 before checking if up
      timeout 2h "${SHELL}" -c 'until task run-command -- "" > /dev/null 2>&1; do echo "Still waiting..."; sleep 15; done'
